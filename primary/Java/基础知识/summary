/**
 * 	封装：隐藏那个具体实现细节，对外提供接口，更加安全。
 * 	继承：类和类之间的关联关系，
 *   	特点：1单继承，联级继承的方式，
 *   		 2继承后子类拥有父类非私有的属性和方法、
 *   		 3继承后可以重写父类的方法
 *   	好处：代码简洁，逻辑结构清晰
 *  多态：一种事物呈现多种形态
 *  	适用前提，继承和重写
 *  抽象：将不可描述的事物通过具体的方法表述出来，得到一个标准的表述方式
 *  	特点：1abstract关键字修饰类和方法，
 *  		2还可以有具体的非抽象方法，可以只有非抽象方法，
 *  		3是被继承的，有构造函数，但是不能创建对象，子类创建对对象， 会调用父类的构造方法
 *  		4子类可以不完全实现他的抽象方法，此时子类必须也声明为抽象类
 *  		
 *  
 *  接口：定义类中的功能，方法规范，不能含有具体实现方法
 *  	特点：1、interface关键字修饰的类，implement实现关键字，实现对应的接口
 *  		2接口中没有构造函数，不能直接创建对象，
 *  		3接口中的方法必须全部实现，
 *  		4接口和接口之间可以多继承
 * 
 * 关键字
 * 	this：指代当前调用的类
 * 	super：指代父类
 * 	static：静态关键字，修饰类属性方法，优先加载
 * 	final：修饰方法时该方法不能被继承，修饰比变量时变量变为常量，不能再被赋值，修饰方法时，方法不能被重写
 * 
 * 
 *
 */
